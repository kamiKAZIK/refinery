# Default values for Refinery.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Refinery configuration
##
refinery:
  ## Override the components name (defaults to `refinery`).
  ##
  nameOverride:

  ## Config version used to trigger deployment upon changes.
  ##
  configVersion: 1

  ## Common configuration for all components
  ##
  common:
    ## Labels to be added to all components.
    ##
    ## Example:
    ##   key1: "value1"
    ##   key2: "value2"
    ##
    ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    labels: {}

    ## Annotations to be added to all components.
    ##
    ## Example:
    ##   key1: "value1"
    ##   key2: "value2"
    ##
    ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    annotations: {}

  ## For Kubernetes RBAC support:
  ##
  rbac:
    ## Enable the creation of RBAC resources.
    ##
    create: true

  ## Role configuration.
  ##
  role:
    ## Labels to be added to the role.
    ##
    ## Example:
    ##   key1: "value1"
    ##   key2: "value2"
    ##
    ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    labels: {}

    ## Annotations for the role.
    ##
    ## Example:
    ##   key1: "value1"
    ##   key2: "value2"
    ##
    ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    annotations: {}

  ## Role binding configuration.
  ##
  roleBinding:
    ## Labels to be added to the role binding.
    ##
    ## Example:
    ##   key1: "value1"
    ##   key2: "value2"
    ##
    ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    labels: {}

    ## Annotations for the role binding.
    ##
    ## Example:
    ##   key1: "value1"
    ##   key2: "value2"
    ##
    ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    annotations: {}

  ## Service account configuration.
  ##
  serviceAccount:
    ## The name of the service account to use for api pods if rbac.create is false
    ##
    existing: default

    ## Labels to be added to the service account.
    ##
    ## Example:
    ##   key1: "value1"
    ##   key2: "value2"
    ##
    ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    labels: {}

    ## Annotations for the service account.
    ##
    ## Example:
    ##   key1: "value1"
    ##   key2: "value2"
    ##
    ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    annotations: {}

  ## Secret definition
  ##
  secret:
    ## Labels to be added to the secret.
    ##
    ## Example:
    ##   key1: "value1"
    ##   key2: "value2"
    ##
    ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    labels: {}

    ## Annotations for the secret.
    ##
    ## Example:
    ##   key1: "value1"
    ##   key2: "value2"
    ##
    ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    annotations: {}

  ## Listener configuration, which is specific to main application component
  ##
  listener:
    ## Deployment configuration
    ##
    deployment:
      ## Number of replicas.
      ##
      replicas: 1

      ## Labels to be added to the deployment.
      ##
      ## Example:
      ##   key1: "value1"
      ##   key2: "value2"
      ##
      ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
      ##
      labels: {}

      ## Annotations for the deployment.
      ##
      ## Example:
      ##   key1: "value1"
      ##   key2: "value2"
      ##
      ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
      ##
      annotations: {}

      ## Strategy for deployment updates.
      ##
      ## Example:
      ##
      ##   strategy:
      ##     type: RollingUpdate
      ##     rollingUpdate:
      ##       maxSurge: 1
      ##       maxUnavailable: 25%
      strategy: {}

    ## Pod(s) configuration
    ##
    pod:
      ## Labels to be added to the pod(s).
      ##
      ## Example:
      ##   key1: "value1"
      ##   key2: "value2"
      ##
      ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
      ##
      labels: {}

      ## Annotations for the pod(s).
      ##
      ## Example:
      ##   key1: "value1"
      ##   key2: "value2"
      ##
      ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
      ##
      annotations: {}

      ## Node selector for pod(s).
      ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
      ##
      nodeSelector: {}

      ## Tolerations for the pod(s).
      ##
      ## Example:
      ##   - key: "toleration=key"
      ##     operator: "Equal"
      ##     value: "value"
      ##     effect: "NoSchedule"
      ##
      ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
      ##
      tolerations: {}

      ## Array of imagePullSecrets to allow pulling the Identity Set Management image from private registries.
      ## ps.: secrets must be manually created in the namespace.
      ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ##
      ## Example:
      ##
      ##   imagePullSecrets:
      ##    - myRegistryKeySecretName
      ##
      imagePullSecrets:
        - awsecr-cred

      ## Security context configuration for pod(s)
      ##
      securityContext:
        ## File System group ID
        ##
        fsGroup: 999

      ## Affinities to add to the pod(s).
      ##
      ## Example:
      ##   nodeAffinity:
      ##     preferredDuringSchedulingIgnoredDuringExecution:
      ##       - weight: 50
      ##         preference:
      ##           matchExpressions:
      ##             - key: spot
      ##               operator: NotIn
      ##               values:
      ##                 - "true"
      ##
      ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
      ##
      affinities: {}

      ## Configure volumes for the pod(s).
      ##
      ## Example:
      ##
      ##   - name: some-volume
      ##     configMap:
      ##       name: some-config
      ##
      ## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
      ##
      volumes: {}

    ## Pod distribution budget configuration for pod(s)
    ##
    podDisruptionBudget:
      ## Labels to be added to the pod disruption budget.
      ##
      ## Example:
      ##   key1: "value1"
      ##   key2: "value2"
      ##
      ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
      ##
      labels: {}

      ## Annotations for the pod disruption budget.
      ##
      ## Example:
      ##   key1: "value1"
      ##   key2: "value2"
      ##
      ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
      ##
      annotations: {}

      ## Minimum available pods. This can be either a number or percentage value
      ##
      minAvailable: 0

    ## Configmap settings.
    ##
    configMap:
      ## Labels to be added to the config map.
      ##
      ## Example:
      ##   key1: "value1"
      ##   key2: "value2"
      ##
      ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
      ##
      labels: {}

      ## Annotations for the config map.
      ##
      ## Example:
      ##   key1: "value1"
      ##   key2: "value2"
      ##
      ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
      ##
      annotations: {}

    ## Refinery listener image to use in api server container(s).
    ##
    image: refinery-listener

    ## Identity Set Management image tag.
    ##
    imageTag:

    ## Specific image digest to use in place of a tag.
    ## Ref: https://kubernetes.io/docs/concepts/configuration/overview/#container-images
    ##
    imageDigest:

    ## Specify a imagePullPolicy regarding the fetching of container images.
    ## Ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    imagePullPolicy: IfNotPresent
